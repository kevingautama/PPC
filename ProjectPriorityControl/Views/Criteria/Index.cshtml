@model IEnumerable<ProjectPriorityControl.ViewModels.CriteriaViewModel>

@{
    ViewData["Title"] = "Index";
    ViewData["ProjectId"] = HttpContextAccessor.HttpContext.Session.GetString("ProjectId");
}

@section Styles{
    <link href="~/lib/datatables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
}
    <div class="row">
        <div class=" col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <canvas id="doughnutChart" style="height:350px"></canvas>
                </div>
            </div>
        </div>
        <div class=" col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <canvas id="barChart" style="height:350px"></canvas>
                </div>
            </div>
        </div>
        <div class=" col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <div id="message-content">

                    </div>
                    <button class="btn btn-success btn-fw" id="add-criteria-button">Add Criteria</button>
                    <hr />
                    <form asp-action="Index" id="criteria-form">
                        <table class="table" id="criterias-table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Type</th>
                                    <th>Weight</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count() > 0)
                                {
                                    @for (var i = 0; i < Model.Count(); i++)
                                    {
                                        <tr>
                                            <td><input name="[@i].Id" type="hidden" value="@Model.ElementAt(i).Id" /><input name="[@i].ChangeType" value="@Model.ElementAt(i).ChangeType" type="hidden" /><input type="text" name="[@i].Name" value="@Model.ElementAt(i).Name" class="form-control name-value" required /></td>
                                            <td><input name="[@i].Description" type="text" value="@Model.ElementAt(i).Description" class="form-control" /></td>
                                            <td>
                                                <select class="form-control type-value" name="[@i].Type">
                                                    @if (Model.ElementAt(i).Type == "Cost")
                                                    {
                                                        <option selected>Cost</option>
                                                        <option>Benefit</option>
                                                    }
                                                    else
                                                    {
                                                        <option>Cost</option>
                                                        <option selected>Benefit</option>
                                                    }

                                                </select>
                                            </td>
                                            <td><input type="text" name="[@i].Weight" value="@Model.ElementAt(i).Weight" class="form-control weight-value" required /></td>
                                            <td><button class="btn btn-danger remove-button">Remove</button></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                        <button type="submit" class="btn btn-primary mt-2">Save</button>
                    </form>

                </div>
            </div>
        </div>
    </div>

@section Scripts{
    <script src="~/lib/datatables/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/parsley/dist/parsley.min.js"></script>
    <script src="~/lib/jquery-number-master/jquery.number.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#criterias-table').DataTable({
                "searching":false,
                "info":false,
                "paging": false,
                "ordering": false
            });

            $('.weight-value').number(true, 2);

            $('#criteria-form').parsley({
                successClass: "is-valid",
                errorClass: "is-invalid",
                errorsWrapper: "<div class='invalid-feedback'></div>",
                errorTemplate: "<div></div>"
            });
            
            var doughnutChart = [];
            var barChart = [];

            if ($("#doughnutChart").length) {
                var count = table.rows().count();
                var benefitCount = 0;
                var costCount = 0;
                for (var i = 0; i < count; i++) {
                    var data = table.row(i).data();
                    var typeValue = $(data[2]).val();
                    if (typeValue == 'Cost') {
                        costCount = costCount + 1;
                    }
                    else if (typeValue == 'Benefit') {
                        benefitCount = benefitCount + 1;
                    }
                }

                doughnutChart = new Chart($("#doughnutChart").get(0).getContext("2d"), {
                    type: 'doughnut',
                    data: {
                        datasets: [{
                            data: [costCount, benefitCount],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(54, 162, 235, 0.5)'
                            ],
                            borderColor: [
                                'rgba(255,99,132,1)',
                                'rgba(54, 162, 235, 1)'
                            ],
                        }],
                        labels: ['Cost', 'Benefit']
                    },
                    options: {
                        responsive: true,
                        animation: {
                            animateScale: true,
                            animateRotate: true
                        }, title: {
                            display: false,
                            text: 'Criteria\'s Donut Chart'
                        }
                    }
                });
            };

            if ($("#barChart").length) {
                var barDatasets = [];
                $('.weight-value').each(function (index, object) {
                    var parent = $(object).closest('tr');
                    var r = Math.floor(Math.random() * 255);
                    var g = Math.floor(Math.random() * 255);
                    var b = Math.floor(Math.random() * 255);
                    var nameValue = $(parent).find('.name-value').val();
                    var typeValue = $(parent).find('.type-value').val();
                    var weightValue = $(parent).find('.weight-value').val();
                    if (typeValue == 'Cost') {
                        weightValue = weightValue * -1;
                    };
                    barDatasets.push({
                        label: nameValue + ' (' + typeValue + ')',
                        data: [parseFloat(weightValue)],
                        backgroundColor: ['rgba(' + r + ', ' + g + ', ' + b + ', 0.5)'],
                        borderColor: ['rgba(' + r + ', ' + g + ', ' + b + ', 1)'],
                        borderWidth: 1
                    });
                });

                barChart = new Chart($("#barChart").get(0).getContext("2d"), {
                    type: 'horizontalBar',
                    data: {
                        labels: ["Criteria"],
                        datasets: barDatasets
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        },
                        legend: {
                            display: true
                        },
                        elements: {
                            point: {
                                radius: 0
                            }
                        }, title: {
                            display: false,
                            text: 'Horizontal Bar\'s Donut Chart'
                        }

                    }
                });
            };

            function updateChart() {
                var weigthTotal = 0;
                //$('.weight-value').each(function (index, object) {
                //    var parent = $(object).closest('tr');
                //    var weigth = parseFloat($(object).val());
                //    weigthTotal = weigthTotal + weigth;
                //    chartData.data.push(weigth);
                //    chartData.labels.push($(parent).find('.name-value').val() + ' (' + $(parent).find('.type-value').val() + ')');
                //});

                var benefitCount = 0;
                var costCount = 0;
                var barDatasets = [];
                $('.weight-value').each(function (index, object) {
                    var parent = $(object).closest('tr');
                    var nameValue = $(parent).find('.name-value').val();
                    var typeValue = $(parent).find('.type-value').val();
                    var weightValue = parseFloat($(parent).find('.weight-value').val());
                    weigthTotal = weigthTotal + weightValue;
                    if (typeValue == 'Cost') {
                        weightValue = weightValue * -1;
                        costCount = costCount + 1;
                    }
                    else if (typeValue == 'Benefit') {
                        benefitCount = benefitCount + 1;
                    }


                    var r = Math.floor(Math.random() * 255);
                    var g = Math.floor(Math.random() * 255);
                    var b = Math.floor(Math.random() * 255);

                    barDatasets.push({
                        label: nameValue + ' (' + typeValue + ')',
                        data: [weightValue],
                        backgroundColor: ['rgba(' + r + ', ' + g + ', ' + b + ', 0.5)'],
                        borderColor: ['rgba(' + r + ', ' + g + ', ' + b + ', 1)'],
                        borderWidth: 1
                    });
                });

                doughnutChart.data.datasets.forEach((dataset) => {
                    dataset.data = [costCount, benefitCount];;
                });

                doughnutChart.update();
                
                if (weigthTotal == 100) {
                    barChart.data.datasets = barDatasets;
                    barChart.update();
                }
            }

            $('#add-criteria-button').click(function () {
                var count = table.rows().count();
                var htmlstring = "<tr><td><input type=\"hidden\" class=\"form-control\" value=\"Add\" name=\"[" + count + "].ChangeType\" required /><input type=\"text\" class=\"form-control name-value\" name=\"[" + count + "].Name\" required /></td><td><input type=\"text\" class=\"form-control\" name=\"[" + count + "].Description\" /></td><td><select class=\"form-control type-value\" name=\"[" + count + "].Type\"><option>Cost</option><option>Benefit</option></select></td><td><input type=\"text\" class=\"form-control weight-value\" name=\"[" + count + "].Weight\" required /></td><td><button type=\"button\" class=\"btn btn-danger remove-button\">Remove</button></td></tr>";
                table.row.add($(htmlstring)).draw();
                $('.weight-value').number(true, 2);

            });

            $('#criterias-table tbody').on('click', 'tr .remove-button', function () {
                table.row($(this).parents('tr')).remove().draw();
                updateChart();
            });

            $('#criteria-form').submit(function (e) {
                var weigthTotal = 0;
                $('.weight-value').each(function (index, object) {
                    var weigth = parseFloat($(object).val());
                    if (weigth > 0) {
                        weigthTotal = weigthTotal + weigth;
                    }
                    else {
                        e.preventDefault();
                        var htmlString = "<div class=\"alert alert-warning alert-dismissible\" role=\"alert\">" +
                            "<button type =\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"> <span aria-hidden=\"true\">&times;</span></button>" +
                            "<strong>Warning!</strong> There is invalid weight.</div>";
                        $('#message-content').html(htmlString);
                    }
                });

                if (weigthTotal != 100) {
                    e.preventDefault();
                    var htmlString = "<div class=\"alert alert-warning alert-dismissible\" role=\"alert\">" +
                        "<button type =\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"> <span aria-hidden=\"true\">&times;</span></button>" +
                        "<strong>Warning!</strong> Total of Weight is not 100.</div>";
                    $('#message-content').html(htmlString);
                }
            });

            $('#criteria-form').on('change', '.weight-value', function () {
                updateChart();
            });
            $('#criteria-form').on('change', '.name-value', function () {
                updateChart();
            });
            $('#criteria-form').on('change', '.type-value', function () {
                updateChart();
            });
        })
    </script>
}
